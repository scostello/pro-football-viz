import * as Knex from 'knex';
import { schemaName } from '../index';

export function up(knex: Knex): Promise<any> {
  return knex.schema
    .withSchema(schemaName)
    .createTable('blocks', (table) => {
      table.integer('id_play').notNullable();
      table.string('blocker');
      table.string('recovering_player');
      table.string('type');
    })
    .createTable('chart', (table) => {
      table.integer('id_game').notNullable();
      table.integer('id_play').notNullable();
      table.text('play_text');
      table.string('team_on_offense');
      table.string('team_on_defense');
      table.string('play_type');
      table.string('quarterback');
      table.string('pass_target');
      table.string('ball_carrier');
      table.string('quarter');
      table.string('line_of_scrimmage');
      table.float('down');
      table.float('yards_to_go');
      table.float('yards_from_own_goal');
      table.string('field_zone');
      table.float('yardage');
      table.boolean('successful_play');
      table.boolean('first_down');
      table.boolean('shotgun');
      table.boolean('no_huddle');
      table.boolean('completion');
      table.boolean('interception');
      table.integer('players_in_backfield');
      table.integer('extra_men_on_line');
      table.boolean('pre_snap_motion');
      table.integer('defenders_in_box');
      table.integer('dbs_in_box');
      table.boolean('play_action_pass');
      table.boolean('trick_play');
      table.boolean('quarterback_pressured');
      table.boolean('quarterback_hit');
      table.boolean('quarterback_hurried');
      table.boolean('quarterback_run');
      table.boolean('quarterback_sneak');
      table.boolean('quarterback_scramble');
      table.float('time_to_scramble');
      table.boolean('throw_motion_hindered');
      table.integer('pass_rushers');
      table.integer('total_blitzers');
      table.integer('db_blitzers');
      table.integer('stunt_pass_rushers');
      table.boolean('out_of_pocket_pass');
      table.text('out_of_pocket_pass_detail');
      table.string('available_targets');
      table.integer('depth_of_target_rank');
      table.string('coverage_of_target');
      table.boolean('physical_ball');
      table.boolean('contested_ball');
      table.boolean('catchable_ball');
      table.boolean('uncatchable_ball');
      table.boolean('shovel_pass');
      table.boolean('sideline_pass');
      table.boolean('highlight_pass');
      table.boolean('created_reception');
      table.boolean('interception_worthy');
      table.boolean('dropped_pass');
      table.boolean('avoided_sacks');
      table.boolean('first_read');
      table.boolean('screen_pass');
      table.boolean('pain_free_play');
      table.boolean('missed_broken_tackles');
      table.float('time_to_sack');
      table.float('time_to_pressure');
      table.float('true_air_yards');
      table.float('depth_of_target');
      table.float('yards_after_catch');
      table.float('yards_after_contact');
      table.float('yards_trucking');
      table.float('coverage_distance_primary');
      table.float('coverage_distance_secondary');
      table.string('pressure_defender_primary');
      table.string('pressure_defender_secondary');
      table.string('defender_code');
      table.string('hurry_defender_primary');
      table.string('hurry_defender_secondary');
    })
    .createTable('conversions', (table) => {
      table.integer('id_play').notNullable();
      table.string('play_type');
      table.string('ball_carrier');
      table.string('passer');
      table.string('pass_target');
      table.boolean('converted');
    })
    .createTable('defense', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game').notNullable();
      table.string('player');
      table.float('solo_tackles');
      table.float('combined_tackles');
      table.float('sacks');
      table.integer('safeties');
      table.integer('blocked_kicks');
      table.integer('interceptions');
      table.integer('passes_defended');
      table.integer('fumbles_recovered');
      table.integer('fumbles_forced');
      table.integer('touchdowns');
      table.integer('return_yardage');
      table.integer('return_touchdowns');
      table.integer('penalty_yardage');
      table.integer('snaps');
      table.float('fantasy_points_nfl');
      table.float('fantasy_points_fd_dk');
      table.integer('player_game');
      table.integer('seasons_played');
      table.integer('nfl_season');
      table.string('team');
      table.string('position_depth_chart');
      table.integer('jersey_number');
      table.integer('depth_chart');
      table.integer('nfl_player_id');
    })
    .createTable('drives', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game').notNullable();
      table.integer('first_play_id');
      table.string('team');
      table.integer('drive_number');
      table.string('how_obtained');
      table.integer('quarter');
      table.integer('minutes');
      table.integer('seconds');
      table.integer('starting_field_position');
      table.integer('plays');
      table.integer('successful_plays');
      table.integer('rushing_first_downs');
      table.integer('passing_first_downs');
      table.integer('other_first_downs');
      table.integer('rushing_yardage');
      table.integer('rushing_attempts');
      table.integer('passing_yardage');
      table.integer('passing_attempts');
      table.integer('passing_completions');
      table.integer('penalty_yardage_for');
      table.integer('penalty_yardage_against');
      table.integer('net_yardage');
      table.string('result');
    })
    .createTable('kick_attempts', (table) => {
      table.integer('id_play').notNullable();
      table.string('type');
      table.string('kicker');
      table.integer('distance');
      table.boolean('was_made');
    })
    .createTable('fumbles', (table) => {
      table.integer('id_play').notNullable();
      table.string('fumbler');
      table.string('recovering_player');
      table.integer('return_yardage');
      table.string('forcing_player');
      table.boolean('fumble_lost');
    })
    .createTable('games', (table) => {
      table.integer('id_game').notNullable();
      table.integer('season');
      table.integer('week');
      table.string('day');
      table.string('visiting_team');
      table.string('home_team');
      table.string('stadium');
      table.integer('temperature');
      table.integer('humidity');
      table.integer('wind_speed');
      table.string('wind_direction');
      table.string('conditions');
      table.string('surface');
      table.float('over_under');
      table.float('vis_point_spread');
      table.integer('points_visitor');
      table.integer('points_home');
    })
    .createTable('injuries', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game').notNullable();
      table.string('player');
      table.string('team');
      table.string('details');
      table.string('practice_status');
      table.string('game_status');
    })
    .createTable('interceptions', (table) => {
      table.integer('id_play').notNullable();
      table.string('passer');
      table.string('interceptor');
      table.integer('return_yardage');
    })
    .createTable('kickers', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game');
      table.string('player');
      table.integer('pats');
      table.integer('field_goals_short');
      table.integer('field_goals_med');
      table.integer('field_goals_long');
      table.float('fantasy_points');
      table.integer('player_game_number');
      table.integer('seasons_played');
      table.integer('year');
      table.string('team');
    })
    .createTable('kickoffs', (table) => {
      table.integer('id_play').notNullable();
      table.string('kicker');
      table.integer('gross_yardage');
      table.integer('net_yardage');
      table.boolean('touchback');
      table.string('returner');
      table.integer('return_yardage');
    })
    .createTable('offense', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game').notNullable();
      table.string('player').notNullable();
      table.integer('passing_attempts');
      table.integer('passing_completions');
      table.integer('passing_yardage');
      table.integer('interceptions');
      table.integer('passing_touchdowns');
      table.integer('rushing_attempts');
      table.integer('successful_rushing_attempts');
      table.integer('rushing_yardage');
      table.integer('rushing_touchdowns');
      table.integer('times_targeted');
      table.integer('receptions');
      table.integer('receiving_yardage');
      table.integer('receiving_touchdowns');
      table.integer('returns');
      table.integer('return_yardage');
      table.integer('return_touchdowns');
      table.integer('fumbles_lost');
      table.integer('penalty_yardage');
      table.integer('conversion');
      table.integer('snaps');
      table.float('fantasy_points_nfl');
      table.float('fantasy_points_fd');
      table.float('fantasy_points_dk');
      table.integer('player_game_number');
      table.integer('seasons_played');
      table.integer('year');
      table.string('team');
      table.string('position_depth_chart');
      table.integer('jersey_number');
      table.integer('depth_chart');
      table.integer('nfl_player_id');
    })
    .createTable('passing', (table) => {
      table.integer('id_play').notNullable();
      table.string('passer').notNullable();
      table.string('target');
      table.string('location');
      table.integer('yards');
      table.boolean('completed');
      table.boolean('successful_play');
      table.boolean('spiked_ball');
      table.string('defender');
    })
    .createTable('play_by_play', (table) => {
      table.integer('id_game').notNullable();
      table.integer('id_play').notNullable();
      table.text('play_text').notNullable();
      table.string('team_on_offense').notNullable();
      table.string('team_on_defense').notNullable();
      table.string('play_type');
      table.integer('drive_sequence_number');
      table.float('play_duration');
      table.integer('quarter');
      table.integer('minutes');
      table.integer('seconds');
      table.integer('points_offense');
      table.integer('points_defense');
      table.integer('timeouts_offense');
      table.integer('timeouts_defense');
      table.integer('down');
      table.integer('yards_to_go');
      table.integer('yards_from_own_goal');
      table.string('field_zone');
      table.integer('yardage');
      table.boolean('successful_play').nullable();
      table.boolean('first_down').nullable();
      table.boolean('shotgun').nullable();
      table.boolean('no_huddle').nullable();
      table.integer('points_scored');
      table.string('ball_carrier');
      table.boolean('took_knee').nullable();
      table.string('rush_direction');
      table.string('rush_tackler_primary');
      table.string('rush_tackler_seconday');
      table.string('passer');
      table.boolean('completion').nullable();
      table.boolean('spiked_ball').nullable();
      table.string('pass_location');
      table.string('pass_target');
      table.string('pass_defender');
      table.string('pass_tackler_primary');
      table.string('pass_tackler_secondary');
      table.string('sacking_player_primary');
      table.string('sacking_player_secondary');
      table.string('penalty_team_primary');
      table.string('penalty_player_primary');
      table.string('penalty_description_primary');
      table.string('penalty_category_primary');
      table.integer('penalty_yards_primary');
      table.string('penalty_action_primary');
      table.string('penalty_team_secondary');
      table.string('penalty_player_secondary');
      table.string('penalty_description_secondary');
      table.string('penalty_category_secondary');
      table.integer('penalty_yards_secondary');
      table.string('penalty_action_secondary');
      table.string('penalty_team_tertiary');
      table.string('penalty_player_tertiary');
      table.string('penalty_description_tertiary');
      table.string('penalty_category_tertiary');
      table.integer('penalty_yards_tertiary');
      table.string('penalty_action_tertiary');
      table.string('intercepting_player');
      table.integer('interception_return_yardage');
      table.string('fumbler');
      table.string('fumble_recoverer');
      table.integer('fumble_return_yardage');
      table.string('fumble_forcer');
      table.boolean('fumble_lost').nullable();
      table.string('safety_player');
      table.string('kick_blocker');
      table.string('kick_block_recoverer');
      table.string('fpxp_kick_type');
      table.string('fpxp_kicker');
      table.integer('kick_distance');
      table.boolean('kick_made').nullable();
      table.string('punter');
      table.integer('punt_gross');
      table.integer('punt_net');
      table.boolean('punt_touchback').nullable();
      table.string('punt_returner');
      table.integer('punt_return_yardage');
      table.boolean('fair_catch').nullable();
      table.string('kickoff_kicker');
      table.integer('kickoff_gross');
      table.integer('kickoff_net');
      table.boolean('kickoff_touchback').nullable();
      table.string('kickoff_returner');
      table.integer('kickoff_return_yardage');
    })
    .createTable('penalties', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_play').notNullable();
      table.string('flagged_team');
      table.string('flagged_player');
      table.string('description');
      table.string('category');
      table.integer('assessed_yardage');
      table.string('action');
    })
    .createTable('plays', (table) => {
      table.integer('id_game').notNullable();
      table.integer('id_play').notNullable();
      table.string('team_on_offense');
      table.string('team_on_defense');
      table.string('play_type');
      table.integer('drive_sequence');
      table.integer('length_in_seconds');
      table.integer('quarter');
      table.integer('minutes');
      table.integer('seconds');
      table.integer('points_offense');
      table.integer('points_defense');
      table.integer('timeouts_offense');
      table.integer('timeouts_defense');
      table.integer('down');
      table.integer('yards_to_go');
      table.integer('yards_from_own_goaline');
      table.integer('field_zone');
      table.boolean('first_down');
      table.boolean('shotgun');
      table.boolean('no_huddle');
      table.boolean('points_scored');
      table.boolean('tackle_on_play');
      table.boolean('sack_on_play');
      table.boolean('penalty_on_play');
      table.boolean('interception_on_play');
      table.boolean('fumble_on_play');
      table.boolean('safety_on_play');
      table.boolean('block_on_play');
    })
    .createTable('players', (table) => {
      table.string('id_player').notNullable();
      table.string('first_name');
      table.string('last_name');
      table.string('play_by_play_name');
      table.string('position_1');
      table.string('position_2');
      table.integer('height');
      table.integer('weight');
      table.date('date_of_birth');
      table.float('forty');
      table.integer('bench');
      table.float('vertical');
      table.float('broad');
      table.float('shuttle');
      table.float('cone');
      table.float('arm_length');
      table.float('hand_size');
      table.integer('draft_position');
      table.string('college');
      table.string('college_division');
      table.integer('first_year');
      table.string('current_team');
      table.string('position_depth_chart');
      table.integer('jersey_number');
      table.integer('depth_chart');
      table.integer('nfl_player_id');
    })
    .createTable('punts', (table) => {
      table.integer('id_play').notNullable();
      table.string('punter');
      table.integer('gross_yardage');
      table.integer('net_yardage');
      table.boolean('touchback');
      table.string('returner');
      table.integer('return_yardage');
      table.boolean('fair_caught');
    })
    .createTable('redzone_appearances', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game');
      table.string('id_player');
      table.integer('passing_attempts');
      table.integer('passing_completions');
      table.integer('passing_yardage');
      table.integer('interceptions');
      table.integer('rushing_attempts');
      table.integer('successful_rushing_attempts');
      table.integer('rushing_yardage');
      table.integer('times_targeted');
      table.integer('receptions');
      table.integer('receiving_yardage');
      table.integer('fumbles_lost');
      table.integer('penalty_yardage');
    })
    .createTable('rushes', (table) => {
      table.integer('id_play').notNullable();
      table.string('ball_carrier');
      table.string('rush_direction');
      table.integer('yards_gained');
      table.boolean('successful_play');
      table.boolean('kneel_down');
    })
    .createTable('sacks', (table) => {
      table.integer('uuid').notNullable();
      table.string('id_play');
      table.string('quarter_back');
      table.string('sacking_player');
      table.float('value');
      table.integer('yards_lost');
    })
    .createTable('safeties', (table) => {
      table.integer('id_play').notNullable();
      table.string('defender');
    })
    .createTable('schedules', (table) => {
      table.integer('id_game').notNullable();
      table.integer('season');
      table.integer('week');
      table.string('day');
      table.dateTime('date');
      table.string('visitor');
      table.string('home');
      table.string('stadium');
      table.string('surface');
    })
    .createTable('snaps', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_game');
      table.string('team');
      table.string('player');
      table.string('position_depth_chart');
      table.string('position_starting_position');
      table.integer('snaps');
    })
    .createTable('tackles', (table) => {
      table.integer('uuid').notNullable();
      table.integer('id_play');
      table.string('tackler');
      table.float('value');
    })
    .createTable('touchdowns', (table) => {
      table.integer('id_play').notNullable();
      table.integer('quarter');
      table.integer('minutes');
      table.integer('seconds');
      table.integer('down');
      table.integer('yards');
      table.integer('points');
      table.string('scoring_player');
      table.string('type');
    });
};

export function down(knex: Knex): Promise<any> {
  return knex.schema
    .withSchema(schemaName)
    .dropTableIfExists('blocks')
    .dropTableIfExists('chart')
    .dropTableIfExists('conversions')
    .dropTableIfExists('defense')
    .dropTableIfExists('drives')
    .dropTableIfExists('kick_attempts')
    .dropTableIfExists('fumbles')
    .dropTableIfExists('games')
    .dropTableIfExists('injuries')
    .dropTableIfExists('interceptions')
    .dropTableIfExists('kickers')
    .dropTableIfExists('kickoffs')
    .dropTableIfExists('offense')
    .dropTableIfExists('passing')
    .dropTableIfExists('play_by_play')
    .dropTableIfExists('penalties')
    .dropTableIfExists('plays')
    .dropTableIfExists('players')
    .dropTableIfExists('punts')
    .dropTableIfExists('redzone_appearances')
    .dropTableIfExists('rushes')
    .dropTableIfExists('sacks')
    .dropTableIfExists('safeties')
    .dropTableIfExists('schedules')
    .dropTableIfExists('snaps')
    .dropTableIfExists('tackles')
    .dropTableIfExists('touchdowns');
}